<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd">
	<context:component-scan base-package="com.yc"/>
<mvc:default-servlet-handler/>
	<mvc:annotation-driven/>
	<mvc:resources mapping="/css/" location="/css/**" />
	<mvc:resources mapping="/js/" location="/js/**" />
	<mvc:resources mapping="/image/" location="/image/**" />
	<mvc:resources mapping="/files/" location="/files/**" />
	
	<aop:aspectj-autoproxy></aop:aspectj-autoproxy>
	
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="maxUploadSize" value="20000000"/>
	</bean>


	<bean id="jspViewResolver"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/jsp/"></property>
		<property name="suffix" value=".jsp"></property>
	</bean>
	<!-- 数据库连接文件db.properties的读取，spring容器启动时，会以流芙蓉方式读取这个db.properties的配置信息 -->
	<context:property-placeholder location="classpath:db.properties" />
	<!-- 使用dbcp2配置数据库连接池 -->
	<bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="${db.driverClassName}" />
		<property name="url" value="${db.url}" />
		<property name="username" value="${db.username}" />
		<property name="password" value="${db.password}" />
	</bean>

	<!-- 取得SqlSessionFactory -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<!-- 取得mybatis的配置文件 <property name="configLocation" value="mybatis_conf.xml"/> -->
		<property name="configurationProperties">
			<props>
				<prop key="logImpl">LOG4J</prop>
			</props>
		</property>
		<!-- 别名的配置 -->
		<property name="typeAliasesPackage" value="com.yc.bean"></property>
		<!-- 配置mapper映射文件 -->
		<property name="mapperLocations" value="classpath*:com/yc/mapper/*.xml"></property>
	</bean>
	<!-- 启用注解解析框架（事务的注解解析） -->
	<tx:annotation-driven transaction-manager="txManager"/>
	<!-- 事务管理器mubatis使用标准的jdbc事务管理器 -->
	<bean id="txManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
</beans>